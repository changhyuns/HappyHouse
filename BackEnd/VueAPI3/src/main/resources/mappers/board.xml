<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.vue.model.mapper.BoardMapper">

	<insert id="writeArticle" parameterType="boardDto">
		insert into board (userid, subject, content, hit, regtime)
		values (#{userid}, #{subject}, #{content}, 0, now())
	</insert>
	
	<select id="listArticle" parameterType="map" resultType="boardDto">
		select articleno, userid, subject, content, hit, comments, regtime
		from board
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				where ${key} = #{word}
			</if>
		</if>
		order by articleno desc
		limit #{start}, #{spp}
	</select>
	
	<select id="getTotalCount" parameterType="map" resultType="int">
		select count(articleno)
		from board
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				where ${key} = #{word}
			</if>
		</if>
	</select>
	
	<select id="getArticle" parameterType="int" resultType="boardDto">
		select articleno, userid, subject, content, hit, regtime
		from board
		where articleno = #{articleno}
	</select>
	
	<select id="getNext" parameterType="int" resultType="int">
		select max(articleno)
		from board
		where articleno &lt; #{articleno}
	</select>
	
	<select id="getPrev" parameterType="int" resultType="int">
		select min(articleno)
		from board
		where articleno &gt; #{articleno}
	</select>
	
	<update id="updateHit" parameterType="int">
		update board
		set hit = hit + 1
		where articleno = #{articleno}
	</update>
	
	<update id="modifyArticle" parameterType="boardDto">
		update board
		set subject = #{subject}, content = #{content}
		where articleno = #{articleno}
	</update>
	
	<delete id="deleteArticle" parameterType="int">
		delete from board
		where articleno = #{articleno}
	</delete>
	
	<insert id="writeComment" parameterType="CommentDto">
		insert into comments (articleno, userid, content, regtime)
		values (#{articleno}, #{userid}, #{content}, now())
	</insert>
	
	<select id="listComment" parameterType="int" resultType="CommentDto">
		select commentid, articleno, userid, content, regtime
		from comments
		where articleno = #{articleno}
		order by commentid desc
	</select>
	
	<select id="getTotalCountComment" parameterType="int" resultType="int">
		select count(commentid)
		from comments
		where articleno = #{articleno}
	</select>
	
	<update id="plusComment" parameterType="CommentPlusDto">
		update board
		set comments = #{comments}
		where articleno = #{articleno}
	</update>
	
	<update id="modifyComment" parameterType="CommentDto">
		update comments
		set content = #{content}, regtime = now()
		where commentid = #{commentid}
	</update>
	
	<delete id="deleteComment" parameterType="int">
		delete from comments
		where commentid = #{commentid}
	</delete>
	
	<insert id="writeSubComment" parameterType="SubCommentDto">
		insert into sub_comments (commentid, articleno, userid, content, regtime)
		values (#{commentid}, #{articleno}, #{userid}, #{content}, now())
	</insert>
	
	<select id="listSubComment" parameterType="int" resultType="SubCommentDto">
		select sub_comment_id, commentid, articleno, userid, content, regtime
		from sub_comments
		where commentid = #{commentid}
		order by sub_comment_id desc
	</select>
	
	<delete id="deleteSubComment" parameterType="int">
		delete from sub_comments
		where sub_comment_id = #{sub_commentid}
	</delete>
	
	<select id="getSubCommentCount" parameterType="int" resultType="int">
		select count(sub_comment_id)
		from sub_comments
		where articleno = #{articleno}
	</select>
</mapper>

